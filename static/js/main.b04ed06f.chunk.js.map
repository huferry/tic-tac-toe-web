{"version":3,"sources":["Components/board_bg.jpg","Components/Cell.js","Components/Board.js","Components/Dialog.js","Components/Stats.js","firestore.js","Components/Hello.js","Components/About.js","Components/Footer.js","App.js","index.js"],"names":["module","exports","Cell","content","shadow","isWinningCell","onClick","useState","shadowVisible","setShadowVisible","label","toUpperCase","style","cursor","className","shadowStyle","display","event","onMouseEnter","onMouseLeave","Board","board","winner","playerSide","onCellClick","row","col","line","some","c","backgroundImage","BoardBackground","map","key","e","side","Dialog","props","show","children","Stats","stats","totalPlay","length","getWinnerCount","who","filter","s","aiWins","humanWins","tie","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Hello","visible","setVisible","src","alt","title","getText","href","About","index","onClose","text","Footer","showAbout","icon","icons","db","firestore","playRef","collection","game","setLogger","x","console","log","getStats","a","get","snapshot","docs","doc","data","App","setStats","setPlayerSide","dialogMessage","setDialogMessage","newBoard","setBoard","setWinner","about","setAbout","then","setMove","move","nextBoard","newWinner","getWinner","isTie","saveResult","Promise","resolve","reject","add","ts","Date","firstSet","err","size","calculateMove","computerMove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b04ed06f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/board_bg.95a64f31.jpg\";","import React, { useState } from 'react'\nimport './Cell.css'\n\nconst Cell = ({content, shadow, isWinningCell, onClick}) => {\n\n    const handleClickEvent = event => {\n        if (!content && onClick) onClick(event)\n    }\n\n    const [shadowVisible, setShadowVisible] = useState(false)\n\n    const label = content ? content.toUpperCase() : '   '\n    const style = { cursor: content ? 'default' : 'pointer'}\n    const className = \"cell\" + (isWinningCell ? \" winning-cell\" : \"\")\n    \n    const shadowStyle = { \n        display: content || !shadowVisible \n        ? 'none' \n        : 'block'\n    }\n\n    return (\n        <div \n            className={className} \n            onClick={handleClickEvent} \n            onMouseEnter={() => setShadowVisible(true)}\n            onMouseLeave={() => setShadowVisible(false)}\n            style={style}>\n            { label } \n            <span \n                className=\"shadow\" \n                style={shadowStyle}>{shadow.toUpperCase()}\n            </span>\n        </div>\n    )\n}\n\nexport default Cell","import React from 'react'\nimport './Board.css'\nimport Cell from './Cell'\nimport BoardBackground from './board_bg.jpg'\n\nconst Board = ({board, winner, playerSide, onCellClick}) => {\n    \n    const isWinningCell = (row, col) => {\n        if (!winner) return false\n        return winner.line.some(c => c.row === row && c.col === col)\n    }\n\n    const buildBoard = () => {\n        return [0,1,2].map(row => {\n            return (<div key={`row_${row}`} className=\"row\">\n                {\n                    [0,1,2].map(col => {\n                        return (\n                            <Cell\n                                shadow={playerSide}\n                                key={`cell_${row}_${col}`}\n                                isWinningCell={isWinningCell(row,col)}\n                                content={board[row][col]}\n                                onClick={ e => onCellClick({row, col, side: playerSide})}\n                            />\n                        )\n                    })\n                }\n            </div>)\n        })\n    }\n\n    return (\n        <div className=\"board\" style={{backgroundImage: `url(${BoardBackground})`}}>\n            { buildBoard() }\n        </div>\n    )\n}\n\nexport default Board","import React from 'react'\nimport './Dialog.css'\n\nconst Dialog = props => {\n    const display = props.show ? 'flex' : 'none'\n    return (\n        <div className=\"dialog-background\" style={{display}}>\n            <div className=\"dialog\">\n                { props.children }\n            </div>\n        </div>\n    )\n}\n\nexport default Dialog","import React from 'react'\nimport './Stats.css'\n\nconst Stats = ({stats}) => {\n    \n    const totalPlay = stats ? stats.length : 0\n\n    const getWinnerCount = who => totalPlay === 0 ? '-' : stats.filter(s => s.winner === who).length\n\n    const aiWins = getWinnerCount('ai')\n    const humanWins = getWinnerCount('human')\n    const tie = getWinnerCount('tie')\n\n    return (\n        <div className='stats'>\n            <div>Tockie wins: {aiWins}</div>\n            <div>Human wins: {humanWins}</div>\n            <div>Tie: {tie}</div>\n        </div>\n    )\n}\n\nexport default Stats","import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCy2MDyOnH6kqkp4OyUxlajKK_6xHfTeK0\",\n  authDomain: \"tic-tac-toe-dca51.firebaseapp.com\",\n  databaseURL: \"https://tic-tac-toe-dca51.firebaseio.com\",\n  projectId: \"tic-tac-toe-dca51\",\n  storageBucket: \"tic-tac-toe-dca51.appspot.com\",\n  messagingSenderId: \"219434023245\",\n  appId: \"1:219434023245:web:dd2b4d8108320a39305f04\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import React, { useState } from 'react'\nimport './Hello.css'\n\nconst Hello = () => {\n    const [ visible, setVisible ] = useState(true)\n\n    return (\n        <div \n            className=\"hello\" \n            style={{display: visible ? 'flex' : 'none' }}\n            onClick={() => setVisible(false)}\n            >\n            <div className=\"hello-box\">\n                <div>\n                    <img src=\"https://robohash.org/ttt\" alt=\"robot\"/>\n                </div>\n                <div>\n                    <p>Hi, my name is Tockie!</p>\n                    <p>\n                    I am an <i>artifical intelligence</i> humanoid.\n                    I was created to beat human in\n                    the Tic-Tac-Toe game.\n                    Please click anywhere to accept the challange!</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Hello","import React from 'react'\nimport './About.css'\n\nconst About = ({ visible, index, onClose }) => {\n    \n    const title =  index < content.length  ? content[index].title : null\n    const text = index < content.length ? content[index].getText() : null\n    \n    return (\n        <div className=\"about\" style={{display: visible ? 'flex' : 'none'}}>\n            <div className=\"about-title\">{title}</div>\n            <div className=\"about-content\">{text}</div>\n            <div \n                className=\"about-button\"\n                onClick={ onClose }\n            >\n                close\n            </div>\n        </div>\n    )\n}\n\nconst content = [\n    {\n        title: 'The Game',\n        getText: () => (\n            <div>\n                This application is created to demonstrate artificial intelligence, a computer \n                that can think like human. I call this computional brain 'Tockie'. Try to beat\n                Tockie and learn that this game is not as simple as you think. Tockie keeps the\n                statistics of each game played to measure his performance. Enjoy the game!\n            </div>\n        ) \n    },\n    {\n        title: 'The Author',\n        getText: () => (\n            <div>\n               His name is Ferry Utomo, a life time programmer. He has been creating software\n               since his 14th, in the late 80s. Currently these are the stacks he specialies:\n               C# (framework &amp; core) backend development, Delphi (backend &amp; windows form),\n               JavaScript (NodeJS, React, jQuery), Oracle (PL/SQL), SQL Server, MySQL, CosmosDB,\n               MongoDB and the list grows. Besides those practical skills, he's also a dedicated\n               SOLID principal, TDD evangelist and an expert in Design Patterns and refactoring \n               techniques. \n               <p>You can reach him through his <a href=\"https://www.linkedin.com/in/heruutomo/\">LinkedIn</a>\n               &nbsp;page.</p>  \n            </div>\n        )\n    },\n    {\n        title: 'The Tech',\n        getText: () => (\n            <div>\n                <p><div className=\"point\">React. </div>The web application is created\n                using vanilla React.\n                </p>\n\n                <p><div className=\"point\">JavaScript. </div>The game engine is created \n                in JavaScript. This engine is written in a functional style. I really\n                fascinated by JavaScript's liberty of weak-typing. This allows us to \n                pass functions as first class citizen without thinking about its complex\n                typing (think of how to do this in C#). Repo is on <a href=\"https://github.com/huferry/tic-tac-toe\">GitHub</a></p>\n\n                <p><div className=\"point\">Firebase/Firestore. </div>The stats are saved\n                in Firestore. <a href=\"https://firebase.google.com/\">Firebase</a> is \n                Google's backend platform and Firestore is a no-SQL\n                database which is also a part of Firebase.</p>\n            </div>\n        )\n    }\n]\n\nexport default About","import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport * as icons from '@fortawesome/free-solid-svg-icons' \nimport './Footer.css'\n\nconst Footer = props => {\n    return (\n        <div className=\"footer\">\n            <div className=\"circle\" onClick={() => props.showAbout(0)}>\n                <FontAwesomeIcon icon={icons.faBrain}/>\n            </div>\n            <div className=\"circle\" onClick={() => props.showAbout(1)}>\n                <FontAwesomeIcon icon={icons.faUser}/>\n            </div>\n            <div className=\"circle\" onClick={() => props.showAbout(2)}>\n                <FontAwesomeIcon icon={icons.faCode}/>\n            </div>\n      </div>\n    )\n}\n\nexport default Footer","import React, { useState } from 'react'\nimport './App.css'\nimport Board from './Components/Board'\n\nimport game from '@greenants/tic-tac-toe'\nimport Dialog from './Components/Dialog'\nimport Stats from './Components/Stats'\nimport firebase from './firestore'\nimport Hello from './Components/Hello'\nimport About from './Components/About'\nimport Footer from './Components/Footer'\n\nconst db = firebase.firestore()\nconst playRef = db.collection('play')\ngame.setLogger(x => console.log(x))\n\nconst getStats = async () => {\n  const snapshot = await db.collection('play').get()\n  return snapshot.docs.map(doc => doc.data())\n}\n\nconst App = () => {\n\n  const [ stats, setStats ] = useState([])\n  const [ playerSide, setPlayerSide ] = useState( 'x' )\n  const [ dialogMessage, setDialogMessage ] = useState( `Let's play Tic, Tac, Toe!` )\n  const [ board, setBoard ] = useState( game.newBoard() )\n  const [ winner, setWinner ] = useState()\n  const [ about, setAbout ] = useState({ visible: false, index: 0 })\n\n  if (stats.length ===0) {\n    getStats().then(s => setStats(s))\n  }\n\n  const setMove = (board, move) => {\n    if (!move || winner) return board\n    const nextBoard = game.setMove(board, move)\n    const newWinner = game.getWinner(nextBoard)\n    setWinner(newWinner)\n    setBoard(nextBoard)\n\n    if (game.isTie(nextBoard)) {\n      saveResult('tie')\n      setDialogMessage(`It's a tie, let's play again!`)\n      getStats().then(s => setStats(s))\n    }\n\n    if (newWinner) {\n      saveResult(newWinner.side === playerSide ? 'human' : 'ai')\n      setDialogMessage(newWinner.side === playerSide \n        ? `You win, let's play again!` : `You lose, let's play again!`)\n        getStats().then(s => setStats(s))\n      }\n    return nextBoard\n  }\n\n  const computerMove = board => {\n    const move = game.calculateMove(board)\n    return setMove(board, move)\n  }\n\n  const cellClick = move => {\n    computerMove(setMove(board, move))\n  }\n  \n  const computerStartGame = () => {\n    setPlayerSide('o')\n    setWinner(null)\n    setBoard(game.newBoard(true))\n    setDialogMessage('')\n  }\n\n  const playerStartGame = () => {\n    setPlayerSide('x')\n    setWinner(null)\n    setBoard(game.newBoard())\n    setDialogMessage('')\n  }\n\n  const saveResult = winner => {\n    return new Promise((resolve, reject) => {\n      try{\n        playRef.add({\n          ts: new Date(),\n          winner,\n          firstSet: playerSide === 'x' ? 'human' : 'ai'\n        })  \n        resolve()    \n      }\n      catch (err) {\n        reject(err)\n      }\n    })\n  }\n\n  return (\n    <div>\n      <div className=\"app\">\n        <div className=\"header\">Let's Play!</div>\n        <div className='side'>Human is playing: {playerSide}</div>\n        <Board \n          board={board}\n          winner={winner} \n          size={600} \n          playerSide={playerSide}\n          onCellClick={cellClick}\n        />\n        <Stats stats={stats} />\n        <Footer showAbout={index => setAbout({visible: true, index})} />\n      </div>\n      <Dialog show={dialogMessage !== ''}>\n          <h2>{dialogMessage}</h2>\n          Who does want to start?\n          <div className=\"button-container\">\n            <div className=\"button\" onClick={computerStartGame}>Tockie</div>\n            <div className=\"button\" onClick={playerStartGame}>You</div>\n          </div>\n      </Dialog>\n      <Hello />\n      <About visible={about.visible} index={about.index} onClose={() => setAbout({visible: false})}/>\n  </div>)\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}